// <auto-generated />
using System;
using Mensajeria_Linux.EntityFramework.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Mensajeria_Linux.Migrations
{
    [DbContext(typeof(NotificationContext))]
    [Migration("20230904083725_Inicial")]
    partial class Inicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Mensajeria_Linux.EntityFramework.Entities.Administradores", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<DateTime>("created")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("token")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("update")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("id");

                    b.ToTable("administradores");
                });

            modelBuilder.Entity("Mensajeria_Linux.EntityFramework.Entities.Agencia", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int>("AdminsitradorId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("created")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("nombreAgencia")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("puedeEmail")
                        .HasColumnType("boolean");

                    b.Property<bool>("puedeSMS")
                        .HasColumnType("boolean");

                    b.Property<bool>("puedeTeams")
                        .HasColumnType("boolean");

                    b.Property<bool>("puedeWhatsApp")
                        .HasColumnType("boolean");

                    b.Property<string>("token")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("update")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("id");

                    b.HasIndex("AdminsitradorId");

                    b.ToTable("Agencias");
                });

            modelBuilder.Entity("Mensajeria_Linux.EntityFramework.Entities.InfoEmail", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int>("agenciaId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("created")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("emailNombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("emailOrigen")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("emailTokenPassword")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("host")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("port")
                        .HasColumnType("integer");

                    b.Property<DateTime>("update")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("id");

                    b.HasIndex("agenciaId");

                    b.ToTable("infoEmail");
                });

            modelBuilder.Entity("Mensajeria_Linux.EntityFramework.Entities.InfoSMS", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int>("agenciaId")
                        .HasColumnType("integer");

                    b.Property<string>("awsAcceskey")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("awsSecretKey")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("created")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("update")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("id");

                    b.HasIndex("agenciaId");

                    b.ToTable("infoSMS");
                });

            modelBuilder.Entity("Mensajeria_Linux.EntityFramework.Entities.InfoTeams", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int>("agenciaId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("created")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("update")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("webHook")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.HasIndex("agenciaId");

                    b.ToTable("infoTeams");
                });

            modelBuilder.Entity("Mensajeria_Linux.EntityFramework.Entities.InfoWhatsApp", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int>("agenciaId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("created")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("idioma")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("token")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("update")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("id");

                    b.HasIndex("agenciaId");

                    b.ToTable("infoWhatsApp");
                });

            modelBuilder.Entity("Mensajeria_Linux.EntityFramework.Entities.Plantillas", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int>("agenciaId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("created")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("plantillaHtml")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<byte[]>("plantillaJSON")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<string>("plantillaPlana")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("update")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("id");

                    b.HasIndex("agenciaId");

                    b.ToTable("Plantilla");
                });

            modelBuilder.Entity("Mensajeria_Linux.EntityFramework.Entities.Agencia", b =>
                {
                    b.HasOne("Mensajeria_Linux.EntityFramework.Entities.Administradores", "adminsitrador")
                        .WithMany("agencias")
                        .HasForeignKey("AdminsitradorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("adminsitrador");
                });

            modelBuilder.Entity("Mensajeria_Linux.EntityFramework.Entities.InfoEmail", b =>
                {
                    b.HasOne("Mensajeria_Linux.EntityFramework.Entities.Agencia", "agencia")
                        .WithMany("InfoEmail")
                        .HasForeignKey("agenciaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("agencia");
                });

            modelBuilder.Entity("Mensajeria_Linux.EntityFramework.Entities.InfoSMS", b =>
                {
                    b.HasOne("Mensajeria_Linux.EntityFramework.Entities.Agencia", "agencia")
                        .WithMany("InfoSMS")
                        .HasForeignKey("agenciaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("agencia");
                });

            modelBuilder.Entity("Mensajeria_Linux.EntityFramework.Entities.InfoTeams", b =>
                {
                    b.HasOne("Mensajeria_Linux.EntityFramework.Entities.Agencia", "agencia")
                        .WithMany("InfoTeams")
                        .HasForeignKey("agenciaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("agencia");
                });

            modelBuilder.Entity("Mensajeria_Linux.EntityFramework.Entities.InfoWhatsApp", b =>
                {
                    b.HasOne("Mensajeria_Linux.EntityFramework.Entities.Agencia", "agencia")
                        .WithMany("InfoWhatsApps")
                        .HasForeignKey("agenciaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("agencia");
                });

            modelBuilder.Entity("Mensajeria_Linux.EntityFramework.Entities.Plantillas", b =>
                {
                    b.HasOne("Mensajeria_Linux.EntityFramework.Entities.Agencia", "agencia")
                        .WithMany("Plantillas")
                        .HasForeignKey("agenciaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("agencia");
                });

            modelBuilder.Entity("Mensajeria_Linux.EntityFramework.Entities.Administradores", b =>
                {
                    b.Navigation("agencias");
                });

            modelBuilder.Entity("Mensajeria_Linux.EntityFramework.Entities.Agencia", b =>
                {
                    b.Navigation("InfoEmail");

                    b.Navigation("InfoSMS");

                    b.Navigation("InfoTeams");

                    b.Navigation("InfoWhatsApps");

                    b.Navigation("Plantillas");
                });
#pragma warning restore 612, 618
        }
    }
}
